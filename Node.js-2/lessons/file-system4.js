// Файлова система

//Для взаємодії з файловою системою є модуль fs та робота із шляхом path
const fs = require('fs')
const path = require('path')

//функція якою ми можем створити файл та записати в нього якісь дані (fs.writeFile)
//path.resolve(__dirname, 'test.txt') - це шлях до файла 
// 'Записує ці дані у файл і перезаписує попередньо записані записи/файли' - це деякий буфер/дані які ми хочем покласти у файл
//()=> {if(err) {throw err}}- callback у якому обробляєм ошибку
fs.writeFile(path.resolve(__dirname, 'test.txt'), 'Записує ці дані у файл і перезаписує попередньо записані записи/файли', ()=> {
    if(err) {
        throw err
    }
    console.log('файл записаний')
})

//функція якою ми можем  дозаписати в нього якісь дані (не стираючи попередні дані як у writeFile) (fs.appendFile)
fs.appendFile(path.resolve(__dirname, 'test.txt'), 'Дозаписує інформацію , нестираючи попередню інфу', ()=> {
    if(err) {
        throw err
    }
    console.log('файл записаний')
})

// якщо нам потрібно дозаписати файл (fs.appendFile) після того коли ми створим файл (fs.writeFile) то потрібно помістити функцію fs.appendFile у функцію fs.writeFile
fs.writeFile(path.resolve(__dirname, 'test.txt'), 'Записує ці дані у файл і перезаписує попередньо записані записи/файли', ()=> {
    if(err) {
        throw err
    }
    console.log('файл записаний')
    fs.appendFile(path.resolve(__dirname, 'test.txt'), 'Дозаписує інформацію , нестираючи попередню інфу', ()=> {
        if(err) {
            throw err
        }
        console.log('файл записаний')
    })
})

//ЦІ ФУНКЦІЇ Є АСИНХРОННИМИ ТОЖ ВОНИ МОЖУТЬ ЗАПИСУВАТИ ІНФОРМАЦІЮ НЕЗАЛЕЖНО ВІД ТОГО В ЯКОМУ МІСЦІ ВОНИ НАПИСАНІ
